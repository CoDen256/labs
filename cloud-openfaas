echo "------------START--------------"
curl -sfL https://get.k3s.io | sudo sh -
sudo systemctl -l status k3s --no-pager
curl -SLs https://get.arkade.dev/ | sudo sh
sudo chmod 744 /etc/rancher/k3s/k3s.yaml
sudo mkdir ~/.kube
sudo kubectl config view --raw | tee ~/.kube/config
sudo chmod 666 ~/.kube/config
sudo arkade install openfaas
sudo kubectl rollout status -n openfaas deploy/gateway
sudo kubectl port-forward -n openfaas svc/gateway --address 0.0.0.0 8080:8080 &
sudo kubectl port-forward -n openfaas svc/prometheus --address 0.0.0.0 9090:9090 & 
sudo kubectl get pod -o wide --all-namespaces
sudo kubectl get pod -o wide -n openfaas
sudo kubectl get svc -o wide gateway-external -n openfaas
echo "Deployment done"
echo "-------------SECONDARY INSTALL-------------"
curl -sL https://cli.openfaas.com | sudo sh
sudo arkade install cron-connector
sudo apt-get remove docker docker.io containerd runc
sudo apt-get install     ca-certificates     curl     gnupg     lsb-release
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
sudo docker --version
echo "---------------SETUP AND LOGIN-----------"
PASSWORD=$(kubectl get secret -n openfaas basic-auth -o jsonpath="{.data.basic-auth-password}" | base64 --decode; echo)
echo -n $PASSWORD | sudo faas-cli login --username admin --password-stdin
echo "--------------------------"
echo $PASSWORD
echo "--------------------------"
echo "------------GRAFANA--------------"
kubectl -n openfaas run \
--image=stefanprodan/faas-grafana:4.6.3 \
--port=3000 \
grafana
kubectl -n openfaas expose pod grafana \
--type=NodePort \
--name=grafana 
GRAFANA_PORT=$(kubectl -n openfaas get svc grafana -o jsonpath="{.spec.ports[0].nodePort}")